name: CI

on:
  push:
    branches: "main"
  pull_request:
    branches: "*"
  schedule:
    - cron: "0 13 * * 1"

jobs:
  build:
    name: Build (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: ci/environment.yml
          activate-environment: pydomcfg_test
          auto-update-conda: false
          python-version: ${{ matrix.python-version }}
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: Set up conda environment
        shell: bash -l {0}
        run: |
          python -m pip install -e .
          conda list

      - name: Run Tests
        shell: bash -l {0}
        run: pytest --cov-report term --cov-report xml

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v5.1.1
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false

  upstream-dev:
    name: upstream-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: ci/upstream-dev-env.yml
          activate-environment: pydomcfg_test_dev
          auto-update-conda: false
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: Set up conda environment
        shell: bash -l {0}
        run: |
          python -m pip install -e .
          conda list

      - name: Run Tests
        shell: bash -l {0}
        run: pytest --no-cov
